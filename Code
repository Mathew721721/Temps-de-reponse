// Définir les broches utilisées
const int fsrPin = A0;        // Broche analogique pour la résistance FSR
const int ledPin = LED_BUILTIN; // Broche pour la LED intégrée (sur Arduino R4, généralement D13)

// Variables
int fsrValue = 0;             // Valeur lue de la résistance FSR
unsigned long startTime = 0;  // Temps de départ pour le top de 1 seconde
unsigned long elapsedTime = 0; // Temps écoulé pour mesurer la réponse

void setup() {
  // Initialisation de la LED intégrée
  pinMode(ledPin, OUTPUT);
  
  // Initialisation de la communication série
  Serial.begin(9600);
  
  // Vérification de la connexion série
  Serial.println("Démarrage du programme...");
  delay(1000);  // Attente de 1 seconde avant de commencer
}

void loop() {
  // Début d'un nouvel essai
  Serial.println("Le top va commencer...");

  // Réinitialiser fsrValue à chaque essai
  fsrValue = 0;

  // Allumer la LED pendant 1 seconde
  digitalWrite(ledPin, HIGH);
  startTime = millis(); // Sauvegarder le temps du top
  while (millis() - startTime < 1000) {
    // Attente de 1 seconde
  }
  digitalWrite(ledPin, LOW);  // Éteindre la LED après 1 seconde

  // Mesurer le temps de réponse pour atteindre une valeur FSR > 300
  Serial.println("Appuyez sur la résistance FSR...");
  elapsedTime = 0; // Réinitialiser le temps écoulé
  
  // Attendre que la valeur FSR dépasse 300
  while (fsrValue <= 300) {
    fsrValue = analogRead(fsrPin); // Lire la valeur du FSR
    elapsedTime = millis() - startTime; // Calculer le temps écoulé depuis le top
    // Afficher la valeur FSR en temps réel pour déboguer
    Serial.print("Valeur FSR : ");
    Serial.println(fsrValue);
  }

  // Une fois que la valeur dépasse 300, afficher le temps de réponse
  Serial.print("Temps de réponse : ");
  Serial.print(elapsedTime);  // Temps en millisecondes
  Serial.println(" ms");

  delay(2000); // Attendre 2 secondes avant de recommencer le processus
}
